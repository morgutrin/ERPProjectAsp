@model ERPProject.Models.Order.OrderEditModelView

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>OrderEditModelView</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ContractorId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ContractorId, (IEnumerable<SelectListItem>)ViewBag.Contractors, null, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ContractorId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RealizationDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RealizationDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RealizationDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Status, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>
        <h4>Articles:</h4>
        <table class="table">
            <tr>
                <th>
                    Article
                </th>
                <th>
                    Amount
                </th>
                <th>
                    Price
                </th>


            </tr>

            @if (Model.OrderRows.Count() > 0)
            {
                for (int i = 0; i < Model.OrderRows.Count(); i++)
                {
                    <tr>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor(model => model.OrderRows.ElementAt(i).ArticleId, htmlAttributes: new { @class = "control-label col-md-2" })

                                <div class="col-md-10">
                                    @Html.DropDownListFor(model => model.OrderRows.ElementAt(i).ArticleId, (IEnumerable<SelectListItem>)ViewBag.Articles, null, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.OrderRows.ElementAt(i).ArticleId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </td>
                        <td>
                            <div class="form-group">
                                @Html.Label("Amount", htmlAttributes: new { @class = "control-label col-md-2" })

                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.OrderRows.ElementAt(i).Amount, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.OrderRows.ElementAt(i).Amount, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </td>
                        <td>
                            <div class="form-group">
                                @Html.Label("Price", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.OrderRows.ElementAt(i).Price, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.OrderRows.ElementAt(i).Price, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </td>

                    </tr>
                }
            }


        </table>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
